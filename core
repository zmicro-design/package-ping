#!/bin/bash

install() {
  # prepare vars
  local name="$PACKAGE_CORE_NAME"

  log::info "[$(timestamp)][package][$name] preparing ..."

  # get system os/arch
  local arch="$PACKAGE_OS_ARCH"
  local kernel="$PACKAGE_OS_KERNEL"
  local platform="$PACKAGE_OS_PLATFORM"
  # usr_bin_dir
  local usr_bin_dir="$PACKAGE_USER_BIN_DIR"
  local tmp_dir="$PACKAGE_TMP_DIR"

  # #
  # case $platform in
  # darwin)
  #   platform="osx"
  #   ;;
  # linux) ;;

  # *)
  #   log::error "[$(timestamp)] unsupport platform: $platform"
  #   ;;
  # esac

  # case $arch in
  # arm64) ;;

  # amd64)
  #   arch="x86_64"
  #   ;;
  # *)
  #   log::error "[$(timestamp)] unsupport arch: $arch"
  #   ;;
  # esac
  # # 

  # files
  local tmp_file="$name.tar.gz"
  local source_bin_file="./${name}-${PACKAGE_CORE_VERSION#v}-${platform}-${arch}/$name"
  # local target_bin_file="$usr_bin_dir/$name"

  # prepare context
  cd $tmp_dir

  # install
  log::info "[$(timestamp)][package][$name] installing ..."
  if [ "$(os::is_macos)" = "true" ]; then
    # pm install -y netcat
    echo "nothing" >> /dev/null
  elif [ "$(os::is_ubuntu)" = "true" ]; then
    pm install -y iputils-ping
  elif [ "$(os::is_centos)" = "true" ]; then
    pm install -y iputils
  else
    log::error "[$(timestamp)] unsupport platform: $platform ($(uname -a))"
  fi

  # clean
  log::info "[$(timestamp)][package][$name] cleaning ..."
  rm -rf $tmp_dir
}

export -f install
